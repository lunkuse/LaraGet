# syntax=docker/dockerfile:experimental
# build stage
FROM node:lts-alpine as build-stage
WORKDIR /app
COPY package*.json ./
RUN npm install

COPY /public/ ./public/
COPY /src/ ./src/
COPY .env favicon.ico index.html postcss.config.cjs README.md tailwind.config.cjs vite.config.js ./

RUN npm run build

# production stage
FROM nginx:stable-alpine as production-stage
COPY --from=build-stage /app/dist /usr/share/nginx/html/
COPY --from=build-stage /app/.env /usr/share/nginx/html/

# install powershell
RUN apk add --no-cache \
    ca-certificates \
    less \
    ncurses-terminfo-base \
    krb5-libs \
    libgcc \
    libintl \
    libssl1.1 \
    libstdc++ \
    tzdata \
    userspace-rcu \
    zlib \
    nano \
    icu-libs \
    curl \
    && apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache lttng-ust \
    # Download the powershell '.tar.gz' archive
    && curl -L https://github.com/PowerShell/PowerShell/releases/download/v7.2.6/powershell-7.2.6-linux-alpine-x64.tar.gz -o /tmp/powershell.tar.gz \
    # Create the target folder where powershell will be placed
    && mkdir -p /opt/microsoft/powershell/7 \
    # Expand powershell to the target folder
    && tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7 \
    # Set execute permissions
    && chmod +x /opt/microsoft/powershell/7/pwsh \
    # Create the symbolic link that points to pwsh
    && ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh

RUN apk add -y procps bc \
    # Install selected extensions and other stuff
    && apt -y --no-install-recommends install apt-utils libxml2-dev gnupg \
    && apt clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* \
    && wget -O /usr/bin/tcpping http://www.vdberg.org/~richard/tcpping \
    && chmod 755 /usr/bin/tcpping

RUN apk add openssh \
    && echo "root:Docker!" | chpasswd \
    && cd /etc/ssh/ \
    && ssh-keygen -A

# # Copy the sshd_config file to the /etc/ssh/ directory
COPY /docker/ssh/sshd_config /etc/ssh/

EXPOSE 80

# copy files used in startup only
COPY /docker/startDev.ps1 /docker/UpdateEnvProperties.ps1 /files/
COPY /docker/nginx.conf /etc/nginx/
ENTRYPOINT ["pwsh", "/files/startDev.ps1"]
# CMD ["nginx", "-g", "daemon off;"]
