parameters:
  subscription: ''
  resourcegroup: ''
  cluster: ''

steps:
- checkout: self
  clean: true

- task: AzureKeyVault@1
  displayName: Fetch secrets
  inputs:
    azureSubscription: ${{parameters.subscription}}
    keyVaultName: $(keyvault)
    secretsFilter: '*'

- task: PowerShell@2
  displayName: Convert backendurl base 64 secret
  inputs:
    targetType: filePath
    filePath: ./pipelines/templates/powershell/CreateBase64Secret.ps1
    arguments: '-Value "$(BackendUrl)" -VariableName backendurlbase64'

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: Replace tokens in  yaml file
  inputs:
    rootDirectory: $(System.DefaultWorkingDirectory)/aks/
    targetFiles: '**/*.yml'
    escapeType: none
    tokenPrefix: '#{'
    tokenSuffix: '}#'

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: Replace tokens in appsettings yml file
  inputs:
    rootDirectory: $(System.DefaultWorkingDirectory)/aks/
    targetFiles: '**/appsettings.yml'
    escapeType: none
    tokenPrefix: '__'
    tokenSuffix: '__'

- task: Kubernetes@1
  displayName: Apply appsettings
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{parameters.subscription}}
    azureResourceGroup: ${{parameters.resourcegroup}}
    kubernetesCluster: ${{parameters.cluster}}
    useClusterAdmin: true
    command: apply
    useConfigurationFile: true
    configuration: $(System.DefaultWorkingDirectory)/aks/appsettings.yml

- task: Kubernetes@1
  displayName: Create deployment
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{parameters.subscription}}
    azureResourceGroup: ${{parameters.resourcegroup}}
    kubernetesCluster: ${{parameters.cluster}}
    useClusterAdmin: true
    command: apply
    useConfigurationFile: true
    configuration: $(System.DefaultWorkingDirectory)/aks/$(deploymentyamlfile)

- task: Kubernetes@1
  displayName: Create service
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{parameters.subscription}}
    azureResourceGroup: ${{parameters.resourcegroup}}
    kubernetesCluster: ${{parameters.cluster}}
    useClusterAdmin: true
    command: apply
    useConfigurationFile: true
    configuration: $(System.DefaultWorkingDirectory)/aks/service.yml

- task: Kubernetes@1
  displayName: Create ingress
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{parameters.subscription}}
    azureResourceGroup: ${{parameters.resourcegroup}}
    kubernetesCluster: ${{parameters.cluster}}
    useClusterAdmin: true
    command: apply
    useConfigurationFile: true
    configuration: $(System.DefaultWorkingDirectory)/aks/$(ingressyamlfile)